spring.application.name=BootForum2

server.servlet.context-path=/

# Set the default profile (can be overridden at runtime)
spring.profiles.active=dev

#
# Note: when starting the application for the very first time, remember to
# set the following properties to force the creation of SQL schema and run
# data initialization script (data.sql):
#    spring.jpa.hibernate.ddl-auto=update
#    spring.jpa.defer-datasource-initialization=true
#    spring.sql.init.mode=always
#

spring.datasource.url=jdbc:h2:file:${user.home}/BootForum2_2/h2/data;DB_CLOSE_DELAY=-1
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=secret
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.jpa.defer-datasource-initialization=true

### in memory application user, for quick security testing
# username
# spring.security.user.name=admin
# password
# spring.security.user.password=secret
# roles
# spring.security.user.roles=ADMIN

# logging.level.org.springframework.security=TRACE
logging.level.org.springframework.security=DEBUG

logging.level.org.springframework.boot.autoconfigure.jdbc=DEBUG

# spring.sql.init.mode controls whether to run the SQL files such as resources/schema.sql on application starts up
# Google says spring.sql.init.mode=always is the default, but somehow, data.sql is not executed
# Therefore, explicitly set it to always to force execution of data.sql
spring.sql.init.mode=never

#
# JWT Configuration
#

# Generate a strong, base64 encoded secret key (e.g., using online tools or code)
# Example ONLY - Replace with a real, secure key! Must be long enough for HS512 (at least 64 bytes / 512 bits).
# Use a secure random generator to create this.
# The following is generated by online base64 random generator
app.jwt.secret=m9xrhxgLm4EVnncZOyX8JHPseZ050/ax2ljsdm1bj3soVDusLIgPUSCsvVHUm+SvNlKUFkiFlpxybM7rUecIAQ==
# Token validity in milliseconds (e.g., 1 hour = 3600000, 1 day = 86400000)
app.jwt.expiration-ms=3600000

# File storage configuration
file.storage.base-path=${user.home}/BootForum2_2/uploads

# Hibernate Search 7.x configuration
# Default backend (Lucene in this case, as hibernate-search-backend-lucene is on the classpath)
spring.jpa.properties.hibernate.search.backend.type=lucene
spring.jpa.properties.hibernate.search.backend.directory.root=${user.home}/BootForum2_2/data/lucene/indexes
# This is often the default for Lucene but good to be explicit
spring.jpa.properties.hibernate.search.backend.directory.type=local-filesystem

# Automatic indexing synchronization strategy (sync or async)
spring.jpa.properties.hibernate.search.automatic_indexing.synchronization.strategy=sync

# Schema management (index creation/update)
spring.jpa.properties.hibernate.search.schema_management.strategy=create-or-update
# Logging for Hibernate Search (already present, good for debugging)
# Enhanced Logging for Hibernate Search and ORM Integration
logging.level.org.hibernate.search=INFO

spring.jpa.show-sql=true