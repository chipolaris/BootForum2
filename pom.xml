<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.4</version> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.github.chipolaris</groupId>
	<artifactId>BootForum2</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>BootForum2</name>
	<description>ML project for Spring Boot</description>
	<licenses>
		<license />
	</licenses>
	<developers>
		<developer />
	</developers>
	<scm>
	</scm>
	<properties>
		<java.version>17</java.version>
		<!-- Define JWT library version -->
		<jjwt.version>0.12.6</jjwt.version>
		<!-- Define Node/NPM versions for frontend build (Adjust as needed for Angular 18+) -->
		<node.version>v20.11.1</node.version>
		<npm.version>10.2.4</npm.version>
		<!-- Define frontend source directory -->
		<frontend.dir>${project.basedir}/src/main/ngapp</frontend.dir>
		<!-- Define Angular build output directory relative to frontend.dir (Same as in angular.json) -->
		<frontend.output.dir>${project.basedir}/src/main/resources/static/browser</frontend.output.dir>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
<!--		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!--== manually added ==-->
		<!-- ref: https://github.com/jwtk/jjwt#installation -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>${jjwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId> <!-- or jjwt-gson if Gson is preferred -->
			<version>${jjwt.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<!-- Use latest version -->
				<version>1.15.0</version>
				<configuration>
					<workingDirectory>${frontend.dir}</workingDirectory>
					<installDirectory>node_home</installDirectory> <!-- Where to install node/npm locally -->
					<nodeVersion>${node.version}</nodeVersion>
					<npmVersion>${npm.version}</npmVersion>
				</configuration>
				<executions>
					<!-- 1. Install Node and npm -->
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<phase>generate-resources</phase>
					</execution>
					<!-- 2. Run npm install -->
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
						<phase>generate-resources</phase>
					</execution>
					<!-- 3. Run Angular build (Adjust 'build' script name if needed) -->
					<execution>
						<id>npm run build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<!-- Check your package.json for the correct build script -->
							<!-- Common: 'run build' or 'run build &#45;&#45; &#45;&#45;configuration production' -->
							<arguments>run build -- --configuration production</arguments>
						</configuration>
						<phase>generate-resources</phase>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
